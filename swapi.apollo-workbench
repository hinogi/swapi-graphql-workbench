{
  "graphName": "swapi",
  "operations": {
    "getAllPeopleNames": {
      "operation": "query getAllPeopleNames {\n  allPeople {\n    people {\n      name\n    }\n  }\n}\n"
    }
  },
  "queryPlans": {
    "getAllPeopleNames": "QueryPlan {\n  Fetch(service: \"people\") {\n    {\n      allPeople {\n        people {\n          name\n        }\n      }\n    }\n  },\n}"
  },
  "schemas": {
    "films": {
      "shouldMock": true,
      "sdl": "\"\"\"\r\nA single film.\r\n\"\"\"\r\ntype Film implements Node @key(fields: \"id\") {\r\n  \"\"\"\r\n  The title of this film.\r\n  \"\"\"\r\n  title: String\r\n\r\n  \"\"\"\r\n  The episode number of this film.\r\n  \"\"\"\r\n  episodeID: Int\r\n\r\n  \"\"\"\r\n  The opening paragraphs at the beginning of this film.\r\n  \"\"\"\r\n  openingCrawl: String\r\n\r\n  \"\"\"\r\n  The name of the director of this film.\r\n  \"\"\"\r\n  director: String\r\n\r\n  \"\"\"\r\n  The name(s) of the producer(s) of this film.\r\n  \"\"\"\r\n  producers: [String]\r\n\r\n  \"\"\"\r\n  The ISO 8601 date format of film release at original creator country.\r\n  \"\"\"\r\n  releaseDate: String\r\n  speciesConnection(\r\n    after: String\r\n    first: Int\r\n    before: String\r\n    last: Int\r\n  ): FilmSpeciesConnection\r\n  starshipConnection(\r\n    after: String\r\n    first: Int\r\n    before: String\r\n    last: Int\r\n  ): FilmStarshipsConnection\r\n  vehicleConnection(\r\n    after: String\r\n    first: Int\r\n    before: String\r\n    last: Int\r\n  ): FilmVehiclesConnection\r\n  characterConnection(\r\n    after: String\r\n    first: Int\r\n    before: String\r\n    last: Int\r\n  ): FilmCharactersConnection\r\n  planetConnection(\r\n    after: String\r\n    first: Int\r\n    before: String\r\n    last: Int\r\n  ): FilmPlanetsConnection\r\n\r\n  \"\"\"\r\n  The ISO 8601 date format of the time that this resource was created.\r\n  \"\"\"\r\n  created: String\r\n\r\n  \"\"\"\r\n  The ISO 8601 date format of the time that this resource was edited.\r\n  \"\"\"\r\n  edited: String\r\n\r\n  \"\"\"\r\n  The ID of an object\r\n  \"\"\"\r\n  id: ID!\r\n}\r\n\r\n\"\"\"\r\nA connection to a list of items.\r\n\"\"\"\r\ntype FilmCharactersConnection {\r\n  \"\"\"\r\n  Information to aid in pagination.\r\n  \"\"\"\r\n  pageInfo: PageInfo!\r\n\r\n  \"\"\"\r\n  A list of edges.\r\n  \"\"\"\r\n  edges: [FilmCharactersEdge]\r\n\r\n  \"\"\"\r\n  A count of the total number of objects in this connection, ignoring pagination.\r\n  This allows a client to fetch the first five objects by passing \"5\" as the\r\n  argument to \"first\", then fetch the total count so it could display \"5 of 83\",\r\n  for example.\r\n  \"\"\"\r\n  totalCount: Int\r\n  \"\"\"\r\n  A list of all of the objects returned in the connection. This is a convenience\r\n  field provided for quickly exploring the API; rather than querying for\r\n  \"{ edges { node } }\" when no edge data is needed, this field can be be used\r\n  instead. Note that when clients like Relay need to fetch the \"cursor\" field on\r\n  the edge to enable efficient pagination, this shortcut cannot be used, and the\r\n  full \"{ edges { node } }\" version should be used instead.\r\n  \"\"\"\r\n  characters: [Person]\r\n}\r\n\"\"\"\r\nAn edge in a connection.\r\n\"\"\"\r\ntype FilmCharactersEdge {\r\n  \"\"\"\r\n  The item at the end of the edge\r\n  \"\"\"\r\n  node: Person\r\n  \"\"\"\r\n  A cursor for use in pagination\r\n  \"\"\"\r\n  cursor: String!\r\n}\r\n\"\"\"\r\nA connection to a list of items.\r\n\"\"\"\r\ntype FilmPlanetsConnection {\r\n  \"\"\"\r\n  Information to aid in pagination.\r\n  \"\"\"\r\n  pageInfo: PageInfo!\r\n  \"\"\"\r\n  A list of edges.\r\n  \"\"\"\r\n  edges: [FilmPlanetsEdge]\r\n  \"\"\"\r\n  A count of the total number of objects in this connection, ignoring pagination.\r\n  This allows a client to fetch the first five objects by passing \"5\" as the\r\n  argument to \"first\", then fetch the total count so it could display \"5 of 83\",\r\n  for example.\r\n  \"\"\"\r\n  totalCount: Int\r\n  \"\"\"\r\n  A list of all of the objects returned in the connection. This is a convenience\r\n  field provided for quickly exploring the API; rather than querying for\r\n  \"{ edges { node } }\" when no edge data is needed, this field can be be used\r\n  instead. Note that when clients like Relay need to fetch the \"cursor\" field on\r\n  the edge to enable efficient pagination, this shortcut cannot be used, and the\r\n  full \"{ edges { node } }\" version should be used instead.\r\n  \"\"\"\r\n  planets: [Planet]\r\n}\r\n\"\"\"\r\nAn edge in a connection.\r\n\"\"\"\r\ntype FilmPlanetsEdge {\r\n  \"\"\"\r\n  The item at the end of the edge\r\n  \"\"\"\r\n  node: Planet\r\n  \"\"\"\r\n  A cursor for use in pagination\r\n  \"\"\"\r\n  cursor: String!\r\n}\r\n\"\"\"\r\nA connection to a list of items.\r\n\"\"\"\r\ntype FilmsConnection {\r\n  \"\"\"\r\n  Information to aid in pagination.\r\n  \"\"\"\r\n  pageInfo: PageInfo!\r\n  \"\"\"\r\n  A list of edges.\r\n  \"\"\"\r\n  edges: [FilmsEdge]\r\n  \"\"\"\r\n  A count of the total number of objects in this connection, ignoring pagination.\r\n  This allows a client to fetch the first five objects by passing \"5\" as the\r\n  argument to \"first\", then fetch the total count so it could display \"5 of 83\",\r\n  for example.\r\n  \"\"\"\r\n  totalCount: Int\r\n  \"\"\"\r\n  A list of all of the objects returned in the connection. This is a convenience\r\n  field provided for quickly exploring the API; rather than querying for\r\n  \"{ edges { node } }\" when no edge data is needed, this field can be be used\r\n  instead. Note that when clients like Relay need to fetch the \"cursor\" field on\r\n  the edge to enable efficient pagination, this shortcut cannot be used, and the\r\n  full \"{ edges { node } }\" version should be used instead.\r\n  \"\"\"\r\n  films: [Film]\r\n}\r\n\r\n\"\"\"\r\nAn edge in a connection.\r\n\"\"\"\r\ntype FilmsEdge {\r\n  \"\"\"\r\n  The item at the end of the edge\r\n  \"\"\"\r\n  node: Film\r\n  \"\"\"\r\n  A cursor for use in pagination\r\n  \"\"\"\r\n  cursor: String!\r\n}\r\n\r\n\"\"\"\r\nA connection to a list of items.\r\n\"\"\"\r\ntype FilmSpeciesConnection {\r\n  \"\"\"\r\n  Information to aid in pagination.\r\n  \"\"\"\r\n  pageInfo: PageInfo!\r\n  \"\"\"\r\n  A list of edges.\r\n  \"\"\"\r\n  edges: [FilmSpeciesEdge]\r\n  \"\"\"\r\n  A count of the total number of objects in this connection, ignoring pagination.\r\n  This allows a client to fetch the first five objects by passing \"5\" as the\r\n  argument to \"first\", then fetch the total count so it could display \"5 of 83\",\r\n  for example.\r\n  \"\"\"\r\n  totalCount: Int\r\n  \"\"\"\r\n  A list of all of the objects returned in the connection. This is a convenience\r\n  field provided for quickly exploring the API; rather than querying for\r\n  \"{ edges { node } }\" when no edge data is needed, this field can be be used\r\n  instead. Note that when clients like Relay need to fetch the \"cursor\" field on\r\n  the edge to enable efficient pagination, this shortcut cannot be used, and the\r\n  full \"{ edges { node } }\" version should be used instead.\r\n  \"\"\"\r\n  species: [Species]\r\n}\r\n\r\n\"\"\"\r\nAn edge in a connection.\r\n\"\"\"\r\ntype FilmSpeciesEdge {\r\n  \"\"\"\r\n  The item at the end of the edge\r\n  \"\"\"\r\n  node: Species\r\n  \"\"\"\r\n  A cursor for use in pagination\r\n  \"\"\"\r\n  cursor: String!\r\n}\r\n\r\n\"\"\"\r\nA connection to a list of items.\r\n\"\"\"\r\ntype FilmStarshipsConnection {\r\n  \"\"\"\r\n  Information to aid in pagination.\r\n  \"\"\"\r\n  pageInfo: PageInfo!\r\n  \"\"\"\r\n  A list of edges.\r\n  \"\"\"\r\n  edges: [FilmStarshipsEdge]\r\n  \"\"\"\r\n  A count of the total number of objects in this connection, ignoring pagination.\r\n  This allows a client to fetch the first five objects by passing \"5\" as the\r\n  argument to \"first\", then fetch the total count so it could display \"5 of 83\",\r\n  for example.\r\n  \"\"\"\r\n  totalCount: Int\r\n  \"\"\"\r\n  A list of all of the objects returned in the connection. This is a convenience\r\n  field provided for quickly exploring the API; rather than querying for\r\n  \"{ edges { node } }\" when no edge data is needed, this field can be be used\r\n  instead. Note that when clients like Relay need to fetch the \"cursor\" field on\r\n  the edge to enable efficient pagination, this shortcut cannot be used, and the\r\n  full \"{ edges { node } }\" version should be used instead.\r\n  \"\"\"\r\n  starships: [Starship]\r\n}\r\n\r\n\"\"\"\r\nAn edge in a connection.\r\n\"\"\"\r\ntype FilmStarshipsEdge {\r\n  \"\"\"\r\n  The item at the end of the edge\r\n  \"\"\"\r\n  node: Starship\r\n  \"\"\"\r\n  A cursor for use in pagination\r\n  \"\"\"\r\n  cursor: String!\r\n}\r\n\r\n\"\"\"\r\nA connection to a list of items.\r\n\"\"\"\r\ntype FilmVehiclesConnection {\r\n  \"\"\"\r\n  Information to aid in pagination.\r\n  \"\"\"\r\n  pageInfo: PageInfo!\r\n  \"\"\"\r\n  A list of edges.\r\n  \"\"\"\r\n  edges: [FilmVehiclesEdge]\r\n  \"\"\"\r\n  A count of the total number of objects in this connection, ignoring pagination.\r\n  This allows a client to fetch the first five objects by passing \"5\" as the\r\n  argument to \"first\", then fetch the total count so it could display \"5 of 83\",\r\n  for example.\r\n  \"\"\"\r\n  totalCount: Int\r\n  \"\"\"\r\n  A list of all of the objects returned in the connection. This is a convenience\r\n  field provided for quickly exploring the API; rather than querying for\r\n  \"{ edges { node } }\" when no edge data is needed, this field can be be used\r\n  instead. Note that when clients like Relay need to fetch the \"cursor\" field on\r\n  the edge to enable efficient pagination, this shortcut cannot be used, and the\r\n  full \"{ edges { node } }\" version should be used instead.\r\n  \"\"\"\r\n  vehicles: [Vehicle]\r\n}\r\n\r\n\"\"\"\r\nAn edge in a connection.\r\n\"\"\"\r\ntype FilmVehiclesEdge {\r\n  \"\"\"\r\n  The item at the end of the edge\r\n  \"\"\"\r\n  node: Vehicle\r\n  \"\"\"\r\n  A cursor for use in pagination\r\n  \"\"\"\r\n  cursor: String!\r\n}\r\n\r\nextend type PageInfo @key(fields: \"hasNextPage\") {\r\n  hasNextPage: Boolean! @external\r\n}\r\n\r\nextend interface Node @key(fields: \"id\") {\r\n  id: ID! @external\r\n}\r\n\r\nextend type Person @key(fields: \"id\") {\r\n  id: ID! @external\r\n}\r\n\r\nextend type Planet @key(fields: \"id\") {\r\n  id: ID! @external\r\n}\r\n\r\nextend type Species @key(fields: \"id\") {\r\n  id: ID! @external\r\n}\r\n\r\nextend type Starship @key(fields: \"id\") {\r\n  id: ID! @external\r\n}\r\n\r\nextend type Vehicle @key(fields: \"id\") {\r\n  id: ID! @external\r\n}\r\n\r\ntype Query {\r\n  allFilms(\r\n    after: String\r\n    first: Int\r\n    before: String\r\n    last: Int\r\n  ): FilmsConnection\r\n  film(id: ID, filmID: ID): Film\r\n}\r\n",
      "autoUpdateSchemaFromUrl": false
    },
    "people": {
      "shouldMock": true,
      "sdl": "\"\"\"\r\nA connection to a list of items.\r\n\"\"\"\r\ntype PeopleConnection {\r\n  \"\"\"\r\n  Information to aid in pagination.\r\n  \"\"\"\r\n  pageInfo: PageInfo!\r\n  \"\"\"\r\n  A list of edges.\r\n  \"\"\"\r\n  edges: [PeopleEdge]\r\n  \"\"\"\r\n  A count of the total number of objects in this connection, ignoring pagination.\r\n  This allows a client to fetch the first five objects by passing \"5\" as the\r\n  argument to \"first\", then fetch the total count so it could display \"5 of 83\",\r\n  for example.\r\n  \"\"\"\r\n  totalCount: Int\r\n  \"\"\"\r\n  A list of all of the objects returned in the connection. This is a convenience\r\n  field provided for quickly exploring the API; rather than querying for\r\n  \"{ edges { node } }\" when no edge data is needed, this field can be be used\r\n  instead. Note that when clients like Relay need to fetch the \"cursor\" field on\r\n  the edge to enable efficient pagination, this shortcut cannot be used, and the\r\n  full \"{ edges { node } }\" version should be used instead.\r\n  \"\"\"\r\n  people: [Person]\r\n}\r\n\"\"\"\r\nAn edge in a connection.\r\n\"\"\"\r\ntype PeopleEdge {\r\n  \"\"\"\r\n  The item at the end of the edge\r\n  \"\"\"\r\n  node: Person\r\n  \"\"\"\r\n  A cursor for use in pagination\r\n  \"\"\"\r\n  cursor: String!\r\n}\r\n\"\"\"\r\nAn individual person or character within the Star Wars universe.\r\n\"\"\"\r\ntype Person implements Node @key(fields: \"id\") {\r\n  \"\"\"\r\n  The name of this person.\r\n  \"\"\"\r\n  name: String\r\n  \"\"\"\r\n  The birth year of the person, using the in-universe standard of BBY or ABY -\r\n  Before the Battle of Yavin or After the Battle of Yavin. The Battle of Yavin is\r\n  a battle that occurs at the end of Star Wars episode IV: A New Hope.\r\n  \"\"\"\r\n  birthYear: String\r\n\r\n  \"\"\"\r\n  The eye color of this person. Will be \"unknown\" if not known or \"n/a\" if the\r\n  person does not have an eye.\r\n  \"\"\"\r\n  eyeColor: String\r\n\r\n  \"\"\"\r\n  The gender of this person. Either \"Male\", \"Female\" or \"unknown\",\r\n  \"n/a\" if the person does not have a gender.\r\n  \"\"\"\r\n  gender: String\r\n  \"\"\"\r\n  The hair color of this person. Will be \"unknown\" if not known or \"n/a\" if the\r\n  person does not have hair.\r\n  \"\"\"\r\n  hairColor: String\r\n  \"\"\"\r\n  The height of the person in centimeters.\r\n  \"\"\"\r\n  height: Int\r\n  \"\"\"\r\n  The mass of the person in kilograms.\r\n  \"\"\"\r\n  mass: Float\r\n  \"\"\"\r\n  The skin color of this person.\r\n  \"\"\"\r\n  skinColor: String\r\n  \"\"\"\r\n  A planet that this person was born on or inhabits.\r\n  \"\"\"\r\n  homeworld: Planet\r\n  filmConnection(\r\n    after: String\r\n    first: Int\r\n    before: String\r\n    last: Int\r\n  ): PersonFilmsConnection\r\n  \"\"\"\r\n  The species that this person belongs to, or null if unknown.\r\n  \"\"\"\r\n  species: Species\r\n  starshipConnection(\r\n    after: String\r\n    first: Int\r\n    before: String\r\n    last: Int\r\n  ): PersonStarshipsConnection\r\n  vehicleConnection(\r\n    after: String\r\n    first: Int\r\n    before: String\r\n    last: Int\r\n  ): PersonVehiclesConnection\r\n  \"\"\"\r\n  The ISO 8601 date format of the time that this resource was created.\r\n  \"\"\"\r\n  created: String\r\n  \"\"\"\r\n  The ISO 8601 date format of the time that this resource was edited.\r\n  \"\"\"\r\n  edited: String\r\n  \"\"\"\r\n  The ID of an object\r\n  \"\"\"\r\n  id: ID!\r\n}\r\n\"\"\"\r\nA connection to a list of items.\r\n\"\"\"\r\ntype PersonFilmsConnection {\r\n  \"\"\"\r\n  Information to aid in pagination.\r\n  \"\"\"\r\n  pageInfo: PageInfo!\r\n  \"\"\"\r\n  A list of edges.\r\n  \"\"\"\r\n  edges: [PersonFilmsEdge]\r\n  \"\"\"\r\n  A count of the total number of objects in this connection, ignoring pagination.\r\n  This allows a client to fetch the first five objects by passing \"5\" as the\r\n  argument to \"first\", then fetch the total count so it could display \"5 of 83\",\r\n  for example.\r\n  \"\"\"\r\n  totalCount: Int\r\n  \"\"\"\r\n  A list of all of the objects returned in the connection. This is a convenience\r\n  field provided for quickly exploring the API; rather than querying for\r\n  \"{ edges { node } }\" when no edge data is needed, this field can be be used\r\n  instead. Note that when clients like Relay need to fetch the \"cursor\" field on\r\n  the edge to enable efficient pagination, this shortcut cannot be used, and the\r\n  full \"{ edges { node } }\" version should be used instead.\r\n  \"\"\"\r\n  films: [Film]\r\n}\r\n\"\"\"\r\nAn edge in a connection.\r\n\"\"\"\r\ntype PersonFilmsEdge {\r\n  \"\"\"\r\n  The item at the end of the edge\r\n  \"\"\"\r\n  node: Film\r\n  \"\"\"\r\n  A cursor for use in pagination\r\n  \"\"\"\r\n  cursor: String!\r\n}\r\n\"\"\"\r\nA connection to a list of items.\r\n\"\"\"\r\ntype PersonStarshipsConnection {\r\n  \"\"\"\r\n  Information to aid in pagination.\r\n  \"\"\"\r\n  pageInfo: PageInfo!\r\n  \"\"\"\r\n  A list of edges.\r\n  \"\"\"\r\n  edges: [PersonStarshipsEdge]\r\n  \"\"\"\r\n  A count of the total number of objects in this connection, ignoring pagination.\r\n  This allows a client to fetch the first five objects by passing \"5\" as the\r\n  argument to \"first\", then fetch the total count so it could display \"5 of 83\",\r\n  for example.\r\n  \"\"\"\r\n  totalCount: Int\r\n  \"\"\"\r\n  A list of all of the objects returned in the connection. This is a convenience\r\n  field provided for quickly exploring the API; rather than querying for\r\n  \"{ edges { node } }\" when no edge data is needed, this field can be be used\r\n  instead. Note that when clients like Relay need to fetch the \"cursor\" field on\r\n  the edge to enable efficient pagination, this shortcut cannot be used, and the\r\n  full \"{ edges { node } }\" version should be used instead.\r\n  \"\"\"\r\n  starships: [Starship]\r\n}\r\n\"\"\"\r\nAn edge in a connection.\r\n\"\"\"\r\ntype PersonStarshipsEdge {\r\n  \"\"\"\r\n  The item at the end of the edge\r\n  \"\"\"\r\n  node: Starship\r\n  \"\"\"\r\n  A cursor for use in pagination\r\n  \"\"\"\r\n  cursor: String!\r\n}\r\n\"\"\"\r\nA connection to a list of items.\r\n\"\"\"\r\ntype PersonVehiclesConnection {\r\n  \"\"\"\r\n  Information to aid in pagination.\r\n  \"\"\"\r\n  pageInfo: PageInfo!\r\n  \"\"\"\r\n  A list of edges.\r\n  \"\"\"\r\n  edges: [PersonVehiclesEdge]\r\n  \"\"\"\r\n  A count of the total number of objects in this connection, ignoring pagination.\r\n  This allows a client to fetch the first five objects by passing \"5\" as the\r\n  argument to \"first\", then fetch the total count so it could display \"5 of 83\",\r\n  for example.\r\n  \"\"\"\r\n  totalCount: Int\r\n  \"\"\"\r\n  A list of all of the objects returned in the connection. This is a convenience\r\n  field provided for quickly exploring the API; rather than querying for\r\n  \"{ edges { node } }\" when no edge data is needed, this field can be be used\r\n  instead. Note that when clients like Relay need to fetch the \"cursor\" field on\r\n  the edge to enable efficient pagination, this shortcut cannot be used, and the\r\n  full \"{ edges { node } }\" version should be used instead.\r\n  \"\"\"\r\n  vehicles: [Vehicle]\r\n}\r\n\"\"\"\r\nAn edge in a connection.\r\n\"\"\"\r\ntype PersonVehiclesEdge {\r\n  \"\"\"\r\n  The item at the end of the edge\r\n  \"\"\"\r\n  node: Vehicle\r\n  \"\"\"\r\n  A cursor for use in pagination\r\n  \"\"\"\r\n  cursor: String!\r\n}\r\n\r\nextend type PageInfo @key(fields: \"hasNextPage\") {\r\n  hasNextPage: Boolean! @external\r\n}\r\n\r\nextend interface Node @key(fields: \"id\") {\r\n  id: ID! @external\r\n}\r\n\r\nextend type Planet @key(fields: \"id\") {\r\n  id: ID! @external\r\n}\r\n\r\nextend type Species @key(fields: \"id\") {\r\n  id: ID! @external\r\n}\r\n\r\nextend type Starship @key(fields: \"id\") {\r\n  id: ID! @external\r\n}\r\n\r\nextend type Vehicle @key(fields: \"id\") {\r\n  id: ID! @external\r\n}\r\n\r\nextend type Film @key(fields: \"id\") {\r\n  id: ID! @external\r\n}\r\n\r\ntype Query {\r\n  allPeople(\r\n    after: String\r\n    first: Int\r\n    before: String\r\n    last: Int\r\n  ): PeopleConnection\r\n  person(id: ID, personID: ID): Person\r\n}\r\n",
      "autoUpdateSchemaFromUrl": false
    },
    "planets": {
      "shouldMock": true,
      "sdl": "\"\"\"\r\nA large mass, planet or planetoid in the Star Wars Universe, at the time of\r\n0 ABY.\r\n\"\"\"\r\ntype Planet implements Node @key(fields: \"id\") {\r\n  \"\"\"\r\n  The name of this planet.\r\n  \"\"\"\r\n  name: String\r\n  \"\"\"\r\n  The diameter of this planet in kilometers.\r\n  \"\"\"\r\n  diameter: Int\r\n  \"\"\"\r\n  The number of standard hours it takes for this planet to complete a single\r\n  rotation on its axis.\r\n  \"\"\"\r\n  rotationPeriod: Int\r\n  \"\"\"\r\n  The number of standard days it takes for this planet to complete a single orbit\r\n  of its local star.\r\n  \"\"\"\r\n  orbitalPeriod: Int\r\n  \"\"\"\r\n  A number denoting the gravity of this planet, where \"1\" is normal or 1 standard\r\n  G. \"2\" is twice or 2 standard Gs. \"0.5\" is half or 0.5 standard Gs.\r\n  \"\"\"\r\n  gravity: String\r\n  \"\"\"\r\n  The average population of sentient beings inhabiting this planet.\r\n  \"\"\"\r\n  population: Float\r\n  \"\"\"\r\n  The climates of this planet.\r\n  \"\"\"\r\n  climates: [String]\r\n  \"\"\"\r\n  The terrains of this planet.\r\n  \"\"\"\r\n  terrains: [String]\r\n  \"\"\"\r\n  The percentage of the planet surface that is naturally occurring water or bodies\r\n  of water.\r\n  \"\"\"\r\n  surfaceWater: Float\r\n  residentConnection(\r\n    after: String\r\n    first: Int\r\n    before: String\r\n    last: Int\r\n  ): PlanetResidentsConnection\r\n  filmConnection(\r\n    after: String\r\n    first: Int\r\n    before: String\r\n    last: Int\r\n  ): PlanetFilmsConnection\r\n  \"\"\"\r\n  The ISO 8601 date format of the time that this resource was created.\r\n  \"\"\"\r\n  created: String\r\n  \"\"\"\r\n  The ISO 8601 date format of the time that this resource was edited.\r\n  \"\"\"\r\n  edited: String\r\n  \"\"\"\r\n  The ID of an object\r\n  \"\"\"\r\n  id: ID!\r\n}\r\n\"\"\"\r\nA connection to a list of items.\r\n\"\"\"\r\ntype PlanetFilmsConnection {\r\n  \"\"\"\r\n  Information to aid in pagination.\r\n  \"\"\"\r\n  pageInfo: PageInfo!\r\n  \"\"\"\r\n  A list of edges.\r\n  \"\"\"\r\n  edges: [PlanetFilmsEdge]\r\n  \"\"\"\r\n  A count of the total number of objects in this connection, ignoring pagination.\r\n  This allows a client to fetch the first five objects by passing \"5\" as the\r\n  argument to \"first\", then fetch the total count so it could display \"5 of 83\",\r\n  for example.\r\n  \"\"\"\r\n  totalCount: Int\r\n  \"\"\"\r\n  A list of all of the objects returned in the connection. This is a convenience\r\n  field provided for quickly exploring the API; rather than querying for\r\n  \"{ edges { node } }\" when no edge data is needed, this field can be be used\r\n  instead. Note that when clients like Relay need to fetch the \"cursor\" field on\r\n  the edge to enable efficient pagination, this shortcut cannot be used, and the\r\n  full \"{ edges { node } }\" version should be used instead.\r\n  \"\"\"\r\n  films: [Film]\r\n}\r\n\"\"\"\r\nAn edge in a connection.\r\n\"\"\"\r\ntype PlanetFilmsEdge {\r\n  \"\"\"\r\n  The item at the end of the edge\r\n  \"\"\"\r\n  node: Film\r\n  \"\"\"\r\n  A cursor for use in pagination\r\n  \"\"\"\r\n  cursor: String!\r\n}\r\n\"\"\"\r\nA connection to a list of items.\r\n\"\"\"\r\ntype PlanetResidentsConnection {\r\n  \"\"\"\r\n  Information to aid in pagination.\r\n  \"\"\"\r\n  pageInfo: PageInfo!\r\n  \"\"\"\r\n  A list of edges.\r\n  \"\"\"\r\n  edges: [PlanetResidentsEdge]\r\n  \"\"\"\r\n  A count of the total number of objects in this connection, ignoring pagination.\r\n  This allows a client to fetch the first five objects by passing \"5\" as the\r\n  argument to \"first\", then fetch the total count so it could display \"5 of 83\",\r\n  for example.\r\n  \"\"\"\r\n  totalCount: Int\r\n  \"\"\"\r\n  A list of all of the objects returned in the connection. This is a convenience\r\n  field provided for quickly exploring the API; rather than querying for\r\n  \"{ edges { node } }\" when no edge data is needed, this field can be be used\r\n  instead. Note that when clients like Relay need to fetch the \"cursor\" field on\r\n  the edge to enable efficient pagination, this shortcut cannot be used, and the\r\n  full \"{ edges { node } }\" version should be used instead.\r\n  \"\"\"\r\n  residents: [Person]\r\n}\r\n\"\"\"\r\nAn edge in a connection.\r\n\"\"\"\r\ntype PlanetResidentsEdge {\r\n  \"\"\"\r\n  The item at the end of the edge\r\n  \"\"\"\r\n  node: Person\r\n  \"\"\"\r\n  A cursor for use in pagination\r\n  \"\"\"\r\n  cursor: String!\r\n}\r\n\"\"\"\r\nA connection to a list of items.\r\n\"\"\"\r\ntype PlanetsConnection {\r\n  \"\"\"\r\n  Information to aid in pagination.\r\n  \"\"\"\r\n  pageInfo: PageInfo!\r\n  \"\"\"\r\n  A list of edges.\r\n  \"\"\"\r\n  edges: [PlanetsEdge]\r\n  \"\"\"\r\n  A count of the total number of objects in this connection, ignoring pagination.\r\n  This allows a client to fetch the first five objects by passing \"5\" as the\r\n  argument to \"first\", then fetch the total count so it could display \"5 of 83\",\r\n  for example.\r\n  \"\"\"\r\n  totalCount: Int\r\n  \"\"\"\r\n  A list of all of the objects returned in the connection. This is a convenience\r\n  field provided for quickly exploring the API; rather than querying for\r\n  \"{ edges { node } }\" when no edge data is needed, this field can be be used\r\n  instead. Note that when clients like Relay need to fetch the \"cursor\" field on\r\n  the edge to enable efficient pagination, this shortcut cannot be used, and the\r\n  full \"{ edges { node } }\" version should be used instead.\r\n  \"\"\"\r\n  planets: [Planet]\r\n}\r\n\"\"\"\r\nAn edge in a connection.\r\n\"\"\"\r\ntype PlanetsEdge {\r\n  \"\"\"\r\n  The item at the end of the edge\r\n  \"\"\"\r\n  node: Planet\r\n  \"\"\"\r\n  A cursor for use in pagination\r\n  \"\"\"\r\n  cursor: String!\r\n}\r\n\r\nextend type PageInfo @key(fields: \"hasNextPage\") {\r\n  hasNextPage: Boolean! @external\r\n}\r\n\r\nextend interface Node @key(fields: \"id\") {\r\n  id: ID! @external\r\n}\r\n\r\nextend type Person @key(fields: \"id\") {\r\n  id: ID! @external\r\n}\r\n\r\nextend type Film @key(fields: \"id\") {\r\n  id: ID! @external\r\n}\r\n\r\ntype Query {\r\n  allPlanets(\r\n    after: String\r\n    first: Int\r\n    before: String\r\n    last: Int\r\n  ): PlanetsConnection\r\n  planet(id: ID, planetID: ID): Planet\r\n}\r\n",
      "autoUpdateSchemaFromUrl": false
    },
    "species": {
      "shouldMock": true,
      "sdl": "\"\"\"\r\nA type of person or character within the Star Wars Universe.\r\n\"\"\"\r\ntype Species implements Node @key(fields: \"id\") {\r\n  \"\"\"\r\n  The name of this species.\r\n  \"\"\"\r\n  name: String\r\n  \"\"\"\r\n  The classification of this species, such as \"mammal\" or \"reptile\".\r\n  \"\"\"\r\n  classification: String\r\n  \"\"\"\r\n  The designation of this species, such as \"sentient\".\r\n  \"\"\"\r\n  designation: String\r\n  \"\"\"\r\n  The average height of this species in centimeters.\r\n  \"\"\"\r\n  averageHeight: Float\r\n  \"\"\"\r\n  The average lifespan of this species in years, null if unknown.\r\n  \"\"\"\r\n  averageLifespan: Int\r\n  \"\"\"\r\n  Common eye colors for this species, null if this species does not typically\r\n  have eyes.\r\n  \"\"\"\r\n  eyeColors: [String]\r\n  \"\"\"\r\n  Common hair colors for this species, null if this species does not typically\r\n  have hair.\r\n  \"\"\"\r\n  hairColors: [String]\r\n  \"\"\"\r\n  Common skin colors for this species, null if this species does not typically\r\n  have skin.\r\n  \"\"\"\r\n  skinColors: [String]\r\n  \"\"\"\r\n  The language commonly spoken by this species.\r\n  \"\"\"\r\n  language: String\r\n  \"\"\"\r\n  A planet that this species originates from.\r\n  \"\"\"\r\n  homeworld: Planet\r\n  personConnection(\r\n    after: String\r\n    first: Int\r\n    before: String\r\n    last: Int\r\n  ): SpeciesPeopleConnection\r\n  filmConnection(\r\n    after: String\r\n    first: Int\r\n    before: String\r\n    last: Int\r\n  ): SpeciesFilmsConnection\r\n  \"\"\"\r\n  The ISO 8601 date format of the time that this resource was created.\r\n  \"\"\"\r\n  created: String\r\n  \"\"\"\r\n  The ISO 8601 date format of the time that this resource was edited.\r\n  \"\"\"\r\n  edited: String\r\n  \"\"\"\r\n  The ID of an object\r\n  \"\"\"\r\n  id: ID!\r\n}\r\n\"\"\"\r\nA connection to a list of items.\r\n\"\"\"\r\ntype SpeciesConnection {\r\n  \"\"\"\r\n  Information to aid in pagination.\r\n  \"\"\"\r\n  pageInfo: PageInfo!\r\n  \"\"\"\r\n  A list of edges.\r\n  \"\"\"\r\n  edges: [SpeciesEdge]\r\n  \"\"\"\r\n  A count of the total number of objects in this connection, ignoring pagination.\r\n  This allows a client to fetch the first five objects by passing \"5\" as the\r\n  argument to \"first\", then fetch the total count so it could display \"5 of 83\",\r\n  for example.\r\n  \"\"\"\r\n  totalCount: Int\r\n  \"\"\"\r\n  A list of all of the objects returned in the connection. This is a convenience\r\n  field provided for quickly exploring the API; rather than querying for\r\n  \"{ edges { node } }\" when no edge data is needed, this field can be be used\r\n  instead. Note that when clients like Relay need to fetch the \"cursor\" field on\r\n  the edge to enable efficient pagination, this shortcut cannot be used, and the\r\n  full \"{ edges { node } }\" version should be used instead.\r\n  \"\"\"\r\n  species: [Species]\r\n}\r\n\"\"\"\r\nAn edge in a connection.\r\n\"\"\"\r\ntype SpeciesEdge {\r\n  \"\"\"\r\n  The item at the end of the edge\r\n  \"\"\"\r\n  node: Species\r\n  \"\"\"\r\n  A cursor for use in pagination\r\n  \"\"\"\r\n  cursor: String!\r\n}\r\n\"\"\"\r\nA connection to a list of items.\r\n\"\"\"\r\ntype SpeciesFilmsConnection {\r\n  \"\"\"\r\n  Information to aid in pagination.\r\n  \"\"\"\r\n  pageInfo: PageInfo!\r\n  \"\"\"\r\n  A list of edges.\r\n  \"\"\"\r\n  edges: [SpeciesFilmsEdge]\r\n  \"\"\"\r\n  A count of the total number of objects in this connection, ignoring pagination.\r\n  This allows a client to fetch the first five objects by passing \"5\" as the\r\n  argument to \"first\", then fetch the total count so it could display \"5 of 83\",\r\n  for example.\r\n  \"\"\"\r\n  totalCount: Int\r\n  \"\"\"\r\n  A list of all of the objects returned in the connection. This is a convenience\r\n  field provided for quickly exploring the API; rather than querying for\r\n  \"{ edges { node } }\" when no edge data is needed, this field can be be used\r\n  instead. Note that when clients like Relay need to fetch the \"cursor\" field on\r\n  the edge to enable efficient pagination, this shortcut cannot be used, and the\r\n  full \"{ edges { node } }\" version should be used instead.\r\n  \"\"\"\r\n  films: [Film]\r\n}\r\n\"\"\"\r\nAn edge in a connection.\r\n\"\"\"\r\ntype SpeciesFilmsEdge {\r\n  \"\"\"\r\n  The item at the end of the edge\r\n  \"\"\"\r\n  node: Film\r\n  \"\"\"\r\n  A cursor for use in pagination\r\n  \"\"\"\r\n  cursor: String!\r\n}\r\n\"\"\"\r\nA connection to a list of items.\r\n\"\"\"\r\ntype SpeciesPeopleConnection {\r\n  \"\"\"\r\n  Information to aid in pagination.\r\n  \"\"\"\r\n  pageInfo: PageInfo!\r\n  \"\"\"\r\n  A list of edges.\r\n  \"\"\"\r\n  edges: [SpeciesPeopleEdge]\r\n  \"\"\"\r\n  A count of the total number of objects in this connection, ignoring pagination.\r\n  This allows a client to fetch the first five objects by passing \"5\" as the\r\n  argument to \"first\", then fetch the total count so it could display \"5 of 83\",\r\n  for example.\r\n  \"\"\"\r\n  totalCount: Int\r\n  \"\"\"\r\n  A list of all of the objects returned in the connection. This is a convenience\r\n  field provided for quickly exploring the API; rather than querying for\r\n  \"{ edges { node } }\" when no edge data is needed, this field can be be used\r\n  instead. Note that when clients like Relay need to fetch the \"cursor\" field on\r\n  the edge to enable efficient pagination, this shortcut cannot be used, and the\r\n  full \"{ edges { node } }\" version should be used instead.\r\n  \"\"\"\r\n  people: [Person]\r\n}\r\n\"\"\"\r\nAn edge in a connection.\r\n\"\"\"\r\ntype SpeciesPeopleEdge {\r\n  \"\"\"\r\n  The item at the end of the edge\r\n  \"\"\"\r\n  node: Person\r\n  \"\"\"\r\n  A cursor for use in pagination\r\n  \"\"\"\r\n  cursor: String!\r\n}\r\n\r\nextend type PageInfo @key(fields: \"hasNextPage\") {\r\n  hasNextPage: Boolean! @external\r\n}\r\n\r\nextend interface Node @key(fields: \"id\") {\r\n  id: ID! @external\r\n}\r\n\r\nextend type Planet @key(fields: \"id\") {\r\n  id: ID! @external\r\n}\r\n\r\nextend type Person @key(fields: \"id\") {\r\n  id: ID! @external\r\n}\r\n\r\nextend type Film @key(fields: \"id\") {\r\n  id: ID! @external\r\n}\r\n\r\ntype Query {\r\n  allSpecies(\r\n    after: String\r\n    first: Int\r\n    before: String\r\n    last: Int\r\n  ): SpeciesConnection\r\n  species(id: ID, speciesID: ID): Species\r\n}\r\n",
      "autoUpdateSchemaFromUrl": false
    },
    "starships": {
      "shouldMock": true,
      "sdl": "\"\"\"\r\nA single transport craft that has hyperdrive capability.\r\n\"\"\"\r\ntype Starship implements Node @key(fields: \"id\") {\r\n  \"\"\"\r\n  The name of this starship. The common name, such as \"Death Star\".\r\n  \"\"\"\r\n  name: String\r\n  \"\"\"\r\n  The model or official name of this starship. Such as \"T-65 X-wing\" or \"DS-1\r\n  Orbital Battle Station\".\r\n  \"\"\"\r\n  model: String\r\n  \"\"\"\r\n  The class of this starship, such as \"Starfighter\" or \"Deep Space Mobile\r\n  Battlestation\"\r\n  \"\"\"\r\n  starshipClass: String\r\n  \"\"\"\r\n  The manufacturers of this starship.\r\n  \"\"\"\r\n  manufacturers: [String]\r\n  \"\"\"\r\n  The cost of this starship new, in galactic credits.\r\n  \"\"\"\r\n  costInCredits: Float\r\n  \"\"\"\r\n  The length of this starship in meters.\r\n  \"\"\"\r\n  length: Float\r\n  \"\"\"\r\n  The number of personnel needed to run or pilot this starship.\r\n  \"\"\"\r\n  crew: String\r\n  \"\"\"\r\n  The number of non-essential people this starship can transport.\r\n  \"\"\"\r\n  passengers: String\r\n  \"\"\"\r\n  The maximum speed of this starship in atmosphere. null if this starship is\r\n  incapable of atmosphering flight.\r\n  \"\"\"\r\n  maxAtmospheringSpeed: Int\r\n  \"\"\"\r\n  The class of this starships hyperdrive.\r\n  \"\"\"\r\n  hyperdriveRating: Float\r\n  \"\"\"\r\n  The Maximum number of Megalights this starship can travel in a standard hour.\r\n  A \"Megalight\" is a standard unit of distance and has never been defined before\r\n  within the Star Wars universe. This figure is only really useful for measuring\r\n  the difference in speed of starships. We can assume it is similar to AU, the\r\n  distance between our Sun (Sol) and Earth.\r\n  \"\"\"\r\n  MGLT: Int\r\n\r\n  \"\"\"\r\n  The maximum number of kilograms that this starship can transport.\r\n  \"\"\"\r\n  cargoCapacity: Float\r\n\r\n  \"\"\"\r\n  The maximum length of time that this starship can provide consumables for its\r\n  entire crew without having to resupply.\r\n  \"\"\"\r\n  consumables: String\r\n  pilotConnection(\r\n    after: String\r\n    first: Int\r\n    before: String\r\n    last: Int\r\n  ): StarshipPilotsConnection\r\n  filmConnection(\r\n    after: String\r\n    first: Int\r\n    before: String\r\n    last: Int\r\n  ): StarshipFilmsConnection\r\n\r\n  \"\"\"\r\n  The ISO 8601 date format of the time that this resource was created.\r\n  \"\"\"\r\n  created: String\r\n\r\n  \"\"\"\r\n  The ISO 8601 date format of the time that this resource was edited.\r\n  \"\"\"\r\n  edited: String\r\n\r\n  \"\"\"\r\n  The ID of an object\r\n  \"\"\"\r\n  id: ID!\r\n}\r\n\r\n\"\"\"\r\nA connection to a list of items.\r\n\"\"\"\r\ntype StarshipFilmsConnection {\r\n  \"\"\"\r\n  Information to aid in pagination.\r\n  \"\"\"\r\n  pageInfo: PageInfo!\r\n\r\n  \"\"\"\r\n  A list of edges.\r\n  \"\"\"\r\n  edges: [StarshipFilmsEdge]\r\n\r\n  \"\"\"\r\n  A count of the total number of objects in this connection, ignoring pagination.\r\n  This allows a client to fetch the first five objects by passing \"5\" as the\r\n  argument to \"first\", then fetch the total count so it could display \"5 of 83\",\r\n  for example.\r\n  \"\"\"\r\n  totalCount: Int\r\n  \"\"\"\r\n  A list of all of the objects returned in the connection. This is a convenience\r\n  field provided for quickly exploring the API; rather than querying for\r\n  \"{ edges { node } }\" when no edge data is needed, this field can be be used\r\n  instead. Note that when clients like Relay need to fetch the \"cursor\" field on\r\n  the edge to enable efficient pagination, this shortcut cannot be used, and the\r\n  full \"{ edges { node } }\" version should be used instead.\r\n  \"\"\"\r\n  films: [Film]\r\n}\r\n\"\"\"\r\nAn edge in a connection.\r\n\"\"\"\r\ntype StarshipFilmsEdge {\r\n  \"\"\"\r\n  The item at the end of the edge\r\n  \"\"\"\r\n  node: Film\r\n  \"\"\"\r\n  A cursor for use in pagination\r\n  \"\"\"\r\n  cursor: String!\r\n}\r\n\"\"\"\r\nA connection to a list of items.\r\n\"\"\"\r\ntype StarshipPilotsConnection {\r\n  \"\"\"\r\n  Information to aid in pagination.\r\n  \"\"\"\r\n  pageInfo: PageInfo!\r\n  \"\"\"\r\n  A list of edges.\r\n  \"\"\"\r\n  edges: [StarshipPilotsEdge]\r\n  \"\"\"\r\n  A count of the total number of objects in this connection, ignoring pagination.\r\n  This allows a client to fetch the first five objects by passing \"5\" as the\r\n  argument to \"first\", then fetch the total count so it could display \"5 of 83\",\r\n  for example.\r\n  \"\"\"\r\n  totalCount: Int\r\n  \"\"\"\r\n  A list of all of the objects returned in the connection. This is a convenience\r\n  field provided for quickly exploring the API; rather than querying for\r\n  \"{ edges { node } }\" when no edge data is needed, this field can be be used\r\n  instead. Note that when clients like Relay need to fetch the \"cursor\" field on\r\n  the edge to enable efficient pagination, this shortcut cannot be used, and the\r\n  full \"{ edges { node } }\" version should be used instead.\r\n  \"\"\"\r\n  pilots: [Person]\r\n}\r\n\"\"\"\r\nAn edge in a connection.\r\n\"\"\"\r\ntype StarshipPilotsEdge {\r\n  \"\"\"\r\n  The item at the end of the edge\r\n  \"\"\"\r\n  node: Person\r\n  \"\"\"\r\n  A cursor for use in pagination\r\n  \"\"\"\r\n  cursor: String!\r\n}\r\n\"\"\"\r\nA connection to a list of items.\r\n\"\"\"\r\ntype StarshipsConnection {\r\n  \"\"\"\r\n  Information to aid in pagination.\r\n  \"\"\"\r\n  pageInfo: PageInfo!\r\n  \"\"\"\r\n  A list of edges.\r\n  \"\"\"\r\n  edges: [StarshipsEdge]\r\n  \"\"\"\r\n  A count of the total number of objects in this connection, ignoring pagination.\r\n  This allows a client to fetch the first five objects by passing \"5\" as the\r\n  argument to \"first\", then fetch the total count so it could display \"5 of 83\",\r\n  for example.\r\n  \"\"\"\r\n  totalCount: Int\r\n  \"\"\"\r\n  A list of all of the objects returned in the connection. This is a convenience\r\n  field provided for quickly exploring the API; rather than querying for\r\n  \"{ edges { node } }\" when no edge data is needed, this field can be be used\r\n  instead. Note that when clients like Relay need to fetch the \"cursor\" field on\r\n  the edge to enable efficient pagination, this shortcut cannot be used, and the\r\n  full \"{ edges { node } }\" version should be used instead.\r\n  \"\"\"\r\n  starships: [Starship]\r\n}\r\n\"\"\"\r\nAn edge in a connection.\r\n\"\"\"\r\ntype StarshipsEdge {\r\n  \"\"\"\r\n  The item at the end of the edge\r\n  \"\"\"\r\n  node: Starship\r\n  \"\"\"\r\n  A cursor for use in pagination\r\n  \"\"\"\r\n  cursor: String!\r\n}\r\n\r\nextend type PageInfo @key(fields: \"hasNextPage\") {\r\n  hasNextPage: Boolean! @external\r\n}\r\n\r\nextend interface Node @key(fields: \"id\") {\r\n  id: ID! @external\r\n}\r\n\r\nextend type Person @key(fields: \"id\") {\r\n  id: ID! @external\r\n}\r\n\r\nextend type Film @key(fields: \"id\") {\r\n  id: ID! @external\r\n}\r\n\r\ntype Query {\r\n  allStarships(\r\n    after: String\r\n    first: Int\r\n    before: String\r\n    last: Int\r\n  ): StarshipsConnection\r\n  starship(id: ID, starshipID: ID): Starship\r\n}\r\n",
      "autoUpdateSchemaFromUrl": false
    },
    "vehicles": {
      "shouldMock": true,
      "sdl": "\"\"\"\r\nA single transport craft that does not have hyperdrive capability\r\n\"\"\"\r\ntype Vehicle implements Node @key(fields: \"id\") {\r\n  \"\"\"\r\n  The name of this vehicle. The common name, such as \"Sand Crawler\" or \"Speeder\r\n  bike\".\r\n  \"\"\"\r\n  name: String\r\n  \"\"\"\r\n  The model or official name of this vehicle. Such as \"All-Terrain Attack\r\n  Transport\".\r\n  \"\"\"\r\n  model: String\r\n  \"\"\"\r\n  The class of this vehicle, such as \"Wheeled\" or \"Repulsorcraft\".\r\n  \"\"\"\r\n  vehicleClass: String\r\n  \"\"\"\r\n  The manufacturers of this vehicle.\r\n  \"\"\"\r\n  manufacturers: [String]\r\n  \"\"\"\r\n  The cost of this vehicle new, in Galactic Credits.\r\n  \"\"\"\r\n  costInCredits: Float\r\n  \"\"\"\r\n  The length of this vehicle in meters.\r\n  \"\"\"\r\n  length: Float\r\n  \"\"\"\r\n  The number of personnel needed to run or pilot this vehicle.\r\n  \"\"\"\r\n  crew: String\r\n  \"\"\"\r\n  The number of non-essential people this vehicle can transport.\r\n  \"\"\"\r\n  passengers: String\r\n  \"\"\"\r\n  The maximum speed of this vehicle in atmosphere.\r\n  \"\"\"\r\n  maxAtmospheringSpeed: Int\r\n  \"\"\"\r\n  The maximum number of kilograms that this vehicle can transport.\r\n  \"\"\"\r\n  cargoCapacity: Float\r\n  \"\"\"\r\n  The maximum length of time that this vehicle can provide consumables for its\r\n  entire crew without having to resupply.\r\n  \"\"\"\r\n  consumables: String\r\n  pilotConnection(\r\n    after: String\r\n    first: Int\r\n    before: String\r\n    last: Int\r\n  ): VehiclePilotsConnection\r\n  filmConnection(\r\n    after: String\r\n    first: Int\r\n    before: String\r\n    last: Int\r\n  ): VehicleFilmsConnection\r\n  \"\"\"\r\n  The ISO 8601 date format of the time that this resource was created.\r\n  \"\"\"\r\n  created: String\r\n  \"\"\"\r\n  The ISO 8601 date format of the time that this resource was edited.\r\n  \"\"\"\r\n  edited: String\r\n  \"\"\"\r\n  The ID of an object\r\n  \"\"\"\r\n  id: ID!\r\n}\r\n\"\"\"\r\nA connection to a list of items.\r\n\"\"\"\r\ntype VehicleFilmsConnection {\r\n  \"\"\"\r\n  Information to aid in pagination.\r\n  \"\"\"\r\n  pageInfo: PageInfo!\r\n  \"\"\"\r\n  A list of edges.\r\n  \"\"\"\r\n  edges: [VehicleFilmsEdge]\r\n  \"\"\"\r\n  A count of the total number of objects in this connection, ignoring pagination.\r\n  This allows a client to fetch the first five objects by passing \"5\" as the\r\n  argument to \"first\", then fetch the total count so it could display \"5 of 83\",\r\n  for example.\r\n  \"\"\"\r\n  totalCount: Int\r\n  \"\"\"\r\n  A list of all of the objects returned in the connection. This is a convenience\r\n  field provided for quickly exploring the API; rather than querying for\r\n  \"{ edges { node } }\" when no edge data is needed, this field can be be used\r\n  instead. Note that when clients like Relay need to fetch the \"cursor\" field on\r\n  the edge to enable efficient pagination, this shortcut cannot be used, and the\r\n  full \"{ edges { node } }\" version should be used instead.\r\n  \"\"\"\r\n  films: [Film]\r\n}\r\n\"\"\"\r\nAn edge in a connection.\r\n\"\"\"\r\ntype VehicleFilmsEdge {\r\n  \"\"\"\r\n  The item at the end of the edge\r\n  \"\"\"\r\n  node: Film\r\n  \"\"\"\r\n  A cursor for use in pagination\r\n  \"\"\"\r\n  cursor: String!\r\n}\r\n\"\"\"\r\nA connection to a list of items.\r\n\"\"\"\r\ntype VehiclePilotsConnection {\r\n  \"\"\"\r\n  Information to aid in pagination.\r\n  \"\"\"\r\n  pageInfo: PageInfo!\r\n  \"\"\"\r\n  A list of edges.\r\n  \"\"\"\r\n  edges: [VehiclePilotsEdge]\r\n  \"\"\"\r\n  A count of the total number of objects in this connection, ignoring pagination.\r\n  This allows a client to fetch the first five objects by passing \"5\" as the\r\n  argument to \"first\", then fetch the total count so it could display \"5 of 83\",\r\n  for example.\r\n  \"\"\"\r\n  totalCount: Int\r\n  \"\"\"\r\n  A list of all of the objects returned in the connection. This is a convenience\r\n  field provided for quickly exploring the API; rather than querying for\r\n  \"{ edges { node } }\" when no edge data is needed, this field can be be used\r\n  instead. Note that when clients like Relay need to fetch the \"cursor\" field on\r\n  the edge to enable efficient pagination, this shortcut cannot be used, and the\r\n  full \"{ edges { node } }\" version should be used instead.\r\n  \"\"\"\r\n  pilots: [Person]\r\n}\r\n\"\"\"\r\nAn edge in a connection.\r\n\"\"\"\r\ntype VehiclePilotsEdge {\r\n  \"\"\"\r\n  The item at the end of the edge\r\n  \"\"\"\r\n  node: Person\r\n  \"\"\"\r\n  A cursor for use in pagination\r\n  \"\"\"\r\n  cursor: String!\r\n}\r\n\"\"\"\r\nA connection to a list of items.\r\n\"\"\"\r\ntype VehiclesConnection {\r\n  \"\"\"\r\n  Information to aid in pagination.\r\n  \"\"\"\r\n  pageInfo: PageInfo!\r\n  \"\"\"\r\n  A list of edges.\r\n  \"\"\"\r\n  edges: [VehiclesEdge]\r\n  \"\"\"\r\n  A count of the total number of objects in this connection, ignoring pagination.\r\n  This allows a client to fetch the first five objects by passing \"5\" as the\r\n  argument to \"first\", then fetch the total count so it could display \"5 of 83\",\r\n  for example.\r\n  \"\"\"\r\n  totalCount: Int\r\n  \"\"\"\r\n  A list of all of the objects returned in the connection. This is a convenience\r\n  field provided for quickly exploring the API; rather than querying for\r\n  \"{ edges { node } }\" when no edge data is needed, this field can be be used\r\n  instead. Note that when clients like Relay need to fetch the \"cursor\" field on\r\n  the edge to enable efficient pagination, this shortcut cannot be used, and the\r\n  full \"{ edges { node } }\" version should be used instead.\r\n  \"\"\"\r\n  vehicles: [Vehicle]\r\n}\r\n\"\"\"\r\nAn edge in a connection.\r\n\"\"\"\r\ntype VehiclesEdge {\r\n  \"\"\"\r\n  The item at the end of the edge\r\n  \"\"\"\r\n  node: Vehicle\r\n  \"\"\"\r\n  A cursor for use in pagination\r\n  \"\"\"\r\n  cursor: String!\r\n}\r\n\r\nextend type PageInfo @key(fields: \"hasNextPage\") {\r\n  hasNextPage: Boolean! @external\r\n}\r\n\r\nextend interface Node @key(fields: \"id\") {\r\n  id: ID! @external\r\n}\r\n\r\nextend type Film @key(fields: \"id\") {\r\n  id: ID! @external\r\n}\r\n\r\nextend type Person @key(fields: \"id\") {\r\n  id: ID! @external\r\n}\r\n\r\ntype Query {\r\n  allVehicles(\r\n    after: String\r\n    first: Int\r\n    before: String\r\n    last: Int\r\n  ): VehiclesConnection\r\n  vehicle(id: ID, vehicleID: ID): Vehicle\r\n}\r\n",
      "autoUpdateSchemaFromUrl": false
    },
    "root": {
      "shouldMock": true,
      "sdl": "interface Node @key(fields: \"id\") {\r\n  id: ID!\r\n}\r\n\r\n\"\"\"\r\nInformation about pagination in a connection.\r\n\"\"\"\r\ntype PageInfo @key(fields: \"hasNextPage\") @key(fields: \"hasPreviousPage\") {\r\n  \"\"\"\r\n  When paginating forwards, are there more items?\r\n  \"\"\"\r\n  hasNextPage: Boolean!\r\n  \"\"\"\r\n  When paginating backwards, are there more items?\r\n  \"\"\"\r\n  hasPreviousPage: Boolean!\r\n  \"\"\"\r\n  When paginating backwards, the cursor to continue.\r\n  \"\"\"\r\n  startCursor: String\r\n  \"\"\"\r\n  When paginating forwards, the cursor to continue.\r\n  \"\"\"\r\n  endCursor: String\r\n}\r\n\r\ntype Query {\r\n  \"\"\"\r\n  Fetches an object given its ID\r\n  \"\"\"\r\n  node(\r\n    \"\"\"\r\n    The ID of an object\r\n    \"\"\"\r\n    id: ID!\r\n  ): Node\r\n}\r\n",
      "autoUpdateSchemaFromUrl": false
    }
  },
  "supergraphSdl": "schema\n  @core(feature: \"https://specs.apollo.dev/core/v0.2\"),\n  @core(feature: \"https://specs.apollo.dev/join/v0.1\", for: EXECUTION)\n{\n  query: Query\n}\n\ndirective @core(as: String, feature: String!, for: core__Purpose) repeatable on SCHEMA\n\ndirective @join__field(graph: join__Graph, provides: join__FieldSet, requires: join__FieldSet) on FIELD_DEFINITION\n\ndirective @join__graph(name: String!, url: String!) on ENUM_VALUE\n\ndirective @join__owner(graph: join__Graph!) on INTERFACE | OBJECT\n\ndirective @join__type(graph: join__Graph!, key: join__FieldSet) repeatable on INTERFACE | OBJECT\n\n\"\"\"A single film.\"\"\"\ntype Film implements Node\n  @join__owner(graph: FILMS)\n  @join__type(graph: FILMS, key: \"id\")\n  @join__type(graph: PEOPLE, key: \"id\")\n  @join__type(graph: PLANETS, key: \"id\")\n  @join__type(graph: SPECIES, key: \"id\")\n  @join__type(graph: STARSHIPS, key: \"id\")\n  @join__type(graph: VEHICLES, key: \"id\")\n{\n  characterConnection(after: String, before: String, first: Int, last: Int): FilmCharactersConnection @join__field(graph: FILMS)\n\n  \"\"\"The ISO 8601 date format of the time that this resource was created.\"\"\"\n  created: String @join__field(graph: FILMS)\n\n  \"\"\"The name of the director of this film.\"\"\"\n  director: String @join__field(graph: FILMS)\n\n  \"\"\"The ISO 8601 date format of the time that this resource was edited.\"\"\"\n  edited: String @join__field(graph: FILMS)\n\n  \"\"\"The episode number of this film.\"\"\"\n  episodeID: Int @join__field(graph: FILMS)\n\n  \"\"\"The ID of an object\"\"\"\n  id: ID! @join__field(graph: FILMS)\n\n  \"\"\"The opening paragraphs at the beginning of this film.\"\"\"\n  openingCrawl: String @join__field(graph: FILMS)\n  planetConnection(after: String, before: String, first: Int, last: Int): FilmPlanetsConnection @join__field(graph: FILMS)\n\n  \"\"\"The name(s) of the producer(s) of this film.\"\"\"\n  producers: [String] @join__field(graph: FILMS)\n\n  \"\"\"The ISO 8601 date format of film release at original creator country.\"\"\"\n  releaseDate: String @join__field(graph: FILMS)\n  speciesConnection(after: String, before: String, first: Int, last: Int): FilmSpeciesConnection @join__field(graph: FILMS)\n  starshipConnection(after: String, before: String, first: Int, last: Int): FilmStarshipsConnection @join__field(graph: FILMS)\n\n  \"\"\"The title of this film.\"\"\"\n  title: String @join__field(graph: FILMS)\n  vehicleConnection(after: String, before: String, first: Int, last: Int): FilmVehiclesConnection @join__field(graph: FILMS)\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype FilmCharactersConnection {\n  \"\"\"\n  A list of all of the objects returned in the connection. This is a convenience\n  field provided for quickly exploring the API; rather than querying for\n  \"{ edges { node } }\" when no edge data is needed, this field can be be used\n  instead. Note that when clients like Relay need to fetch the \"cursor\" field on\n  the edge to enable efficient pagination, this shortcut cannot be used, and the\n  full \"{ edges { node } }\" version should be used instead.\n  \"\"\"\n  characters: [Person]\n\n  \"\"\"A list of edges.\"\"\"\n  edges: [FilmCharactersEdge]\n\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"\n  A count of the total number of objects in this connection, ignoring pagination.\n  This allows a client to fetch the first five objects by passing \"5\" as the\n  argument to \"first\", then fetch the total count so it could display \"5 of 83\",\n  for example.\n  \"\"\"\n  totalCount: Int\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype FilmCharactersEdge {\n  \"\"\"A cursor for use in pagination\"\"\"\n  cursor: String!\n\n  \"\"\"The item at the end of the edge\"\"\"\n  node: Person\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype FilmPlanetsConnection {\n  \"\"\"A list of edges.\"\"\"\n  edges: [FilmPlanetsEdge]\n\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"\n  A list of all of the objects returned in the connection. This is a convenience\n  field provided for quickly exploring the API; rather than querying for\n  \"{ edges { node } }\" when no edge data is needed, this field can be be used\n  instead. Note that when clients like Relay need to fetch the \"cursor\" field on\n  the edge to enable efficient pagination, this shortcut cannot be used, and the\n  full \"{ edges { node } }\" version should be used instead.\n  \"\"\"\n  planets: [Planet]\n\n  \"\"\"\n  A count of the total number of objects in this connection, ignoring pagination.\n  This allows a client to fetch the first five objects by passing \"5\" as the\n  argument to \"first\", then fetch the total count so it could display \"5 of 83\",\n  for example.\n  \"\"\"\n  totalCount: Int\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype FilmPlanetsEdge {\n  \"\"\"A cursor for use in pagination\"\"\"\n  cursor: String!\n\n  \"\"\"The item at the end of the edge\"\"\"\n  node: Planet\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype FilmSpeciesConnection {\n  \"\"\"A list of edges.\"\"\"\n  edges: [FilmSpeciesEdge]\n\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"\n  A list of all of the objects returned in the connection. This is a convenience\n  field provided for quickly exploring the API; rather than querying for\n  \"{ edges { node } }\" when no edge data is needed, this field can be be used\n  instead. Note that when clients like Relay need to fetch the \"cursor\" field on\n  the edge to enable efficient pagination, this shortcut cannot be used, and the\n  full \"{ edges { node } }\" version should be used instead.\n  \"\"\"\n  species: [Species]\n\n  \"\"\"\n  A count of the total number of objects in this connection, ignoring pagination.\n  This allows a client to fetch the first five objects by passing \"5\" as the\n  argument to \"first\", then fetch the total count so it could display \"5 of 83\",\n  for example.\n  \"\"\"\n  totalCount: Int\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype FilmSpeciesEdge {\n  \"\"\"A cursor for use in pagination\"\"\"\n  cursor: String!\n\n  \"\"\"The item at the end of the edge\"\"\"\n  node: Species\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype FilmStarshipsConnection {\n  \"\"\"A list of edges.\"\"\"\n  edges: [FilmStarshipsEdge]\n\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"\n  A list of all of the objects returned in the connection. This is a convenience\n  field provided for quickly exploring the API; rather than querying for\n  \"{ edges { node } }\" when no edge data is needed, this field can be be used\n  instead. Note that when clients like Relay need to fetch the \"cursor\" field on\n  the edge to enable efficient pagination, this shortcut cannot be used, and the\n  full \"{ edges { node } }\" version should be used instead.\n  \"\"\"\n  starships: [Starship]\n\n  \"\"\"\n  A count of the total number of objects in this connection, ignoring pagination.\n  This allows a client to fetch the first five objects by passing \"5\" as the\n  argument to \"first\", then fetch the total count so it could display \"5 of 83\",\n  for example.\n  \"\"\"\n  totalCount: Int\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype FilmStarshipsEdge {\n  \"\"\"A cursor for use in pagination\"\"\"\n  cursor: String!\n\n  \"\"\"The item at the end of the edge\"\"\"\n  node: Starship\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype FilmVehiclesConnection {\n  \"\"\"A list of edges.\"\"\"\n  edges: [FilmVehiclesEdge]\n\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"\n  A count of the total number of objects in this connection, ignoring pagination.\n  This allows a client to fetch the first five objects by passing \"5\" as the\n  argument to \"first\", then fetch the total count so it could display \"5 of 83\",\n  for example.\n  \"\"\"\n  totalCount: Int\n\n  \"\"\"\n  A list of all of the objects returned in the connection. This is a convenience\n  field provided for quickly exploring the API; rather than querying for\n  \"{ edges { node } }\" when no edge data is needed, this field can be be used\n  instead. Note that when clients like Relay need to fetch the \"cursor\" field on\n  the edge to enable efficient pagination, this shortcut cannot be used, and the\n  full \"{ edges { node } }\" version should be used instead.\n  \"\"\"\n  vehicles: [Vehicle]\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype FilmVehiclesEdge {\n  \"\"\"A cursor for use in pagination\"\"\"\n  cursor: String!\n\n  \"\"\"The item at the end of the edge\"\"\"\n  node: Vehicle\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype FilmsConnection {\n  \"\"\"A list of edges.\"\"\"\n  edges: [FilmsEdge]\n\n  \"\"\"\n  A list of all of the objects returned in the connection. This is a convenience\n  field provided for quickly exploring the API; rather than querying for\n  \"{ edges { node } }\" when no edge data is needed, this field can be be used\n  instead. Note that when clients like Relay need to fetch the \"cursor\" field on\n  the edge to enable efficient pagination, this shortcut cannot be used, and the\n  full \"{ edges { node } }\" version should be used instead.\n  \"\"\"\n  films: [Film]\n\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"\n  A count of the total number of objects in this connection, ignoring pagination.\n  This allows a client to fetch the first five objects by passing \"5\" as the\n  argument to \"first\", then fetch the total count so it could display \"5 of 83\",\n  for example.\n  \"\"\"\n  totalCount: Int\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype FilmsEdge {\n  \"\"\"A cursor for use in pagination\"\"\"\n  cursor: String!\n\n  \"\"\"The item at the end of the edge\"\"\"\n  node: Film\n}\n\ninterface Node {\n  id: ID!\n}\n\n\"\"\"Information about pagination in a connection.\"\"\"\ntype PageInfo\n  @join__owner(graph: ROOT)\n  @join__type(graph: ROOT, key: \"hasNextPage\")\n  @join__type(graph: ROOT, key: \"hasPreviousPage\")\n  @join__type(graph: FILMS, key: \"hasNextPage\")\n  @join__type(graph: PEOPLE, key: \"hasNextPage\")\n  @join__type(graph: PLANETS, key: \"hasNextPage\")\n  @join__type(graph: SPECIES, key: \"hasNextPage\")\n  @join__type(graph: STARSHIPS, key: \"hasNextPage\")\n  @join__type(graph: VEHICLES, key: \"hasNextPage\")\n{\n  \"\"\"When paginating forwards, the cursor to continue.\"\"\"\n  endCursor: String @join__field(graph: ROOT)\n\n  \"\"\"When paginating forwards, are there more items?\"\"\"\n  hasNextPage: Boolean! @join__field(graph: ROOT)\n\n  \"\"\"When paginating backwards, are there more items?\"\"\"\n  hasPreviousPage: Boolean! @join__field(graph: ROOT)\n\n  \"\"\"When paginating backwards, the cursor to continue.\"\"\"\n  startCursor: String @join__field(graph: ROOT)\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype PeopleConnection {\n  \"\"\"A list of edges.\"\"\"\n  edges: [PeopleEdge]\n\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"\n  A list of all of the objects returned in the connection. This is a convenience\n  field provided for quickly exploring the API; rather than querying for\n  \"{ edges { node } }\" when no edge data is needed, this field can be be used\n  instead. Note that when clients like Relay need to fetch the \"cursor\" field on\n  the edge to enable efficient pagination, this shortcut cannot be used, and the\n  full \"{ edges { node } }\" version should be used instead.\n  \"\"\"\n  people: [Person]\n\n  \"\"\"\n  A count of the total number of objects in this connection, ignoring pagination.\n  This allows a client to fetch the first five objects by passing \"5\" as the\n  argument to \"first\", then fetch the total count so it could display \"5 of 83\",\n  for example.\n  \"\"\"\n  totalCount: Int\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype PeopleEdge {\n  \"\"\"A cursor for use in pagination\"\"\"\n  cursor: String!\n\n  \"\"\"The item at the end of the edge\"\"\"\n  node: Person\n}\n\n\"\"\"An individual person or character within the Star Wars universe.\"\"\"\ntype Person implements Node\n  @join__owner(graph: PEOPLE)\n  @join__type(graph: PEOPLE, key: \"id\")\n  @join__type(graph: FILMS, key: \"id\")\n  @join__type(graph: PLANETS, key: \"id\")\n  @join__type(graph: SPECIES, key: \"id\")\n  @join__type(graph: STARSHIPS, key: \"id\")\n  @join__type(graph: VEHICLES, key: \"id\")\n{\n  \"\"\"\n  The birth year of the person, using the in-universe standard of BBY or ABY -\n  Before the Battle of Yavin or After the Battle of Yavin. The Battle of Yavin is\n  a battle that occurs at the end of Star Wars episode IV: A New Hope.\n  \"\"\"\n  birthYear: String @join__field(graph: PEOPLE)\n\n  \"\"\"The ISO 8601 date format of the time that this resource was created.\"\"\"\n  created: String @join__field(graph: PEOPLE)\n\n  \"\"\"The ISO 8601 date format of the time that this resource was edited.\"\"\"\n  edited: String @join__field(graph: PEOPLE)\n\n  \"\"\"\n  The eye color of this person. Will be \"unknown\" if not known or \"n/a\" if the\n  person does not have an eye.\n  \"\"\"\n  eyeColor: String @join__field(graph: PEOPLE)\n  filmConnection(after: String, before: String, first: Int, last: Int): PersonFilmsConnection @join__field(graph: PEOPLE)\n\n  \"\"\"\n  The gender of this person. Either \"Male\", \"Female\" or \"unknown\",\n  \"n/a\" if the person does not have a gender.\n  \"\"\"\n  gender: String @join__field(graph: PEOPLE)\n\n  \"\"\"\n  The hair color of this person. Will be \"unknown\" if not known or \"n/a\" if the\n  person does not have hair.\n  \"\"\"\n  hairColor: String @join__field(graph: PEOPLE)\n\n  \"\"\"The height of the person in centimeters.\"\"\"\n  height: Int @join__field(graph: PEOPLE)\n\n  \"\"\"A planet that this person was born on or inhabits.\"\"\"\n  homeworld: Planet @join__field(graph: PEOPLE)\n\n  \"\"\"The ID of an object\"\"\"\n  id: ID! @join__field(graph: PEOPLE)\n\n  \"\"\"The mass of the person in kilograms.\"\"\"\n  mass: Float @join__field(graph: PEOPLE)\n\n  \"\"\"The name of this person.\"\"\"\n  name: String @join__field(graph: PEOPLE)\n\n  \"\"\"The skin color of this person.\"\"\"\n  skinColor: String @join__field(graph: PEOPLE)\n\n  \"\"\"The species that this person belongs to, or null if unknown.\"\"\"\n  species: Species @join__field(graph: PEOPLE)\n  starshipConnection(after: String, before: String, first: Int, last: Int): PersonStarshipsConnection @join__field(graph: PEOPLE)\n  vehicleConnection(after: String, before: String, first: Int, last: Int): PersonVehiclesConnection @join__field(graph: PEOPLE)\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype PersonFilmsConnection {\n  \"\"\"A list of edges.\"\"\"\n  edges: [PersonFilmsEdge]\n\n  \"\"\"\n  A list of all of the objects returned in the connection. This is a convenience\n  field provided for quickly exploring the API; rather than querying for\n  \"{ edges { node } }\" when no edge data is needed, this field can be be used\n  instead. Note that when clients like Relay need to fetch the \"cursor\" field on\n  the edge to enable efficient pagination, this shortcut cannot be used, and the\n  full \"{ edges { node } }\" version should be used instead.\n  \"\"\"\n  films: [Film]\n\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"\n  A count of the total number of objects in this connection, ignoring pagination.\n  This allows a client to fetch the first five objects by passing \"5\" as the\n  argument to \"first\", then fetch the total count so it could display \"5 of 83\",\n  for example.\n  \"\"\"\n  totalCount: Int\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype PersonFilmsEdge {\n  \"\"\"A cursor for use in pagination\"\"\"\n  cursor: String!\n\n  \"\"\"The item at the end of the edge\"\"\"\n  node: Film\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype PersonStarshipsConnection {\n  \"\"\"A list of edges.\"\"\"\n  edges: [PersonStarshipsEdge]\n\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"\n  A list of all of the objects returned in the connection. This is a convenience\n  field provided for quickly exploring the API; rather than querying for\n  \"{ edges { node } }\" when no edge data is needed, this field can be be used\n  instead. Note that when clients like Relay need to fetch the \"cursor\" field on\n  the edge to enable efficient pagination, this shortcut cannot be used, and the\n  full \"{ edges { node } }\" version should be used instead.\n  \"\"\"\n  starships: [Starship]\n\n  \"\"\"\n  A count of the total number of objects in this connection, ignoring pagination.\n  This allows a client to fetch the first five objects by passing \"5\" as the\n  argument to \"first\", then fetch the total count so it could display \"5 of 83\",\n  for example.\n  \"\"\"\n  totalCount: Int\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype PersonStarshipsEdge {\n  \"\"\"A cursor for use in pagination\"\"\"\n  cursor: String!\n\n  \"\"\"The item at the end of the edge\"\"\"\n  node: Starship\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype PersonVehiclesConnection {\n  \"\"\"A list of edges.\"\"\"\n  edges: [PersonVehiclesEdge]\n\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"\n  A count of the total number of objects in this connection, ignoring pagination.\n  This allows a client to fetch the first five objects by passing \"5\" as the\n  argument to \"first\", then fetch the total count so it could display \"5 of 83\",\n  for example.\n  \"\"\"\n  totalCount: Int\n\n  \"\"\"\n  A list of all of the objects returned in the connection. This is a convenience\n  field provided for quickly exploring the API; rather than querying for\n  \"{ edges { node } }\" when no edge data is needed, this field can be be used\n  instead. Note that when clients like Relay need to fetch the \"cursor\" field on\n  the edge to enable efficient pagination, this shortcut cannot be used, and the\n  full \"{ edges { node } }\" version should be used instead.\n  \"\"\"\n  vehicles: [Vehicle]\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype PersonVehiclesEdge {\n  \"\"\"A cursor for use in pagination\"\"\"\n  cursor: String!\n\n  \"\"\"The item at the end of the edge\"\"\"\n  node: Vehicle\n}\n\n\"\"\"\nA large mass, planet or planetoid in the Star Wars Universe, at the time of\n0 ABY.\n\"\"\"\ntype Planet implements Node\n  @join__owner(graph: PLANETS)\n  @join__type(graph: PLANETS, key: \"id\")\n  @join__type(graph: FILMS, key: \"id\")\n  @join__type(graph: PEOPLE, key: \"id\")\n  @join__type(graph: SPECIES, key: \"id\")\n{\n  \"\"\"The climates of this planet.\"\"\"\n  climates: [String] @join__field(graph: PLANETS)\n\n  \"\"\"The ISO 8601 date format of the time that this resource was created.\"\"\"\n  created: String @join__field(graph: PLANETS)\n\n  \"\"\"The diameter of this planet in kilometers.\"\"\"\n  diameter: Int @join__field(graph: PLANETS)\n\n  \"\"\"The ISO 8601 date format of the time that this resource was edited.\"\"\"\n  edited: String @join__field(graph: PLANETS)\n  filmConnection(after: String, before: String, first: Int, last: Int): PlanetFilmsConnection @join__field(graph: PLANETS)\n\n  \"\"\"\n  A number denoting the gravity of this planet, where \"1\" is normal or 1 standard\n  G. \"2\" is twice or 2 standard Gs. \"0.5\" is half or 0.5 standard Gs.\n  \"\"\"\n  gravity: String @join__field(graph: PLANETS)\n\n  \"\"\"The ID of an object\"\"\"\n  id: ID! @join__field(graph: PLANETS)\n\n  \"\"\"The name of this planet.\"\"\"\n  name: String @join__field(graph: PLANETS)\n\n  \"\"\"\n  The number of standard days it takes for this planet to complete a single orbit\n  of its local star.\n  \"\"\"\n  orbitalPeriod: Int @join__field(graph: PLANETS)\n\n  \"\"\"The average population of sentient beings inhabiting this planet.\"\"\"\n  population: Float @join__field(graph: PLANETS)\n  residentConnection(after: String, before: String, first: Int, last: Int): PlanetResidentsConnection @join__field(graph: PLANETS)\n\n  \"\"\"\n  The number of standard hours it takes for this planet to complete a single\n  rotation on its axis.\n  \"\"\"\n  rotationPeriod: Int @join__field(graph: PLANETS)\n\n  \"\"\"\n  The percentage of the planet surface that is naturally occurring water or bodies\n  of water.\n  \"\"\"\n  surfaceWater: Float @join__field(graph: PLANETS)\n\n  \"\"\"The terrains of this planet.\"\"\"\n  terrains: [String] @join__field(graph: PLANETS)\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype PlanetFilmsConnection {\n  \"\"\"A list of edges.\"\"\"\n  edges: [PlanetFilmsEdge]\n\n  \"\"\"\n  A list of all of the objects returned in the connection. This is a convenience\n  field provided for quickly exploring the API; rather than querying for\n  \"{ edges { node } }\" when no edge data is needed, this field can be be used\n  instead. Note that when clients like Relay need to fetch the \"cursor\" field on\n  the edge to enable efficient pagination, this shortcut cannot be used, and the\n  full \"{ edges { node } }\" version should be used instead.\n  \"\"\"\n  films: [Film]\n\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"\n  A count of the total number of objects in this connection, ignoring pagination.\n  This allows a client to fetch the first five objects by passing \"5\" as the\n  argument to \"first\", then fetch the total count so it could display \"5 of 83\",\n  for example.\n  \"\"\"\n  totalCount: Int\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype PlanetFilmsEdge {\n  \"\"\"A cursor for use in pagination\"\"\"\n  cursor: String!\n\n  \"\"\"The item at the end of the edge\"\"\"\n  node: Film\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype PlanetResidentsConnection {\n  \"\"\"A list of edges.\"\"\"\n  edges: [PlanetResidentsEdge]\n\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"\n  A list of all of the objects returned in the connection. This is a convenience\n  field provided for quickly exploring the API; rather than querying for\n  \"{ edges { node } }\" when no edge data is needed, this field can be be used\n  instead. Note that when clients like Relay need to fetch the \"cursor\" field on\n  the edge to enable efficient pagination, this shortcut cannot be used, and the\n  full \"{ edges { node } }\" version should be used instead.\n  \"\"\"\n  residents: [Person]\n\n  \"\"\"\n  A count of the total number of objects in this connection, ignoring pagination.\n  This allows a client to fetch the first five objects by passing \"5\" as the\n  argument to \"first\", then fetch the total count so it could display \"5 of 83\",\n  for example.\n  \"\"\"\n  totalCount: Int\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype PlanetResidentsEdge {\n  \"\"\"A cursor for use in pagination\"\"\"\n  cursor: String!\n\n  \"\"\"The item at the end of the edge\"\"\"\n  node: Person\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype PlanetsConnection {\n  \"\"\"A list of edges.\"\"\"\n  edges: [PlanetsEdge]\n\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"\n  A list of all of the objects returned in the connection. This is a convenience\n  field provided for quickly exploring the API; rather than querying for\n  \"{ edges { node } }\" when no edge data is needed, this field can be be used\n  instead. Note that when clients like Relay need to fetch the \"cursor\" field on\n  the edge to enable efficient pagination, this shortcut cannot be used, and the\n  full \"{ edges { node } }\" version should be used instead.\n  \"\"\"\n  planets: [Planet]\n\n  \"\"\"\n  A count of the total number of objects in this connection, ignoring pagination.\n  This allows a client to fetch the first five objects by passing \"5\" as the\n  argument to \"first\", then fetch the total count so it could display \"5 of 83\",\n  for example.\n  \"\"\"\n  totalCount: Int\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype PlanetsEdge {\n  \"\"\"A cursor for use in pagination\"\"\"\n  cursor: String!\n\n  \"\"\"The item at the end of the edge\"\"\"\n  node: Planet\n}\n\ntype Query {\n  allFilms(after: String, before: String, first: Int, last: Int): FilmsConnection @join__field(graph: FILMS)\n  allPeople(after: String, before: String, first: Int, last: Int): PeopleConnection @join__field(graph: PEOPLE)\n  allPlanets(after: String, before: String, first: Int, last: Int): PlanetsConnection @join__field(graph: PLANETS)\n  allSpecies(after: String, before: String, first: Int, last: Int): SpeciesConnection @join__field(graph: SPECIES)\n  allStarships(after: String, before: String, first: Int, last: Int): StarshipsConnection @join__field(graph: STARSHIPS)\n  allVehicles(after: String, before: String, first: Int, last: Int): VehiclesConnection @join__field(graph: VEHICLES)\n  film(filmID: ID, id: ID): Film @join__field(graph: FILMS)\n\n  \"\"\"Fetches an object given its ID\"\"\"\n  node(\n    \"\"\"The ID of an object\"\"\"\n    id: ID!\n  ): Node @join__field(graph: ROOT)\n  person(id: ID, personID: ID): Person @join__field(graph: PEOPLE)\n  planet(id: ID, planetID: ID): Planet @join__field(graph: PLANETS)\n  species(id: ID, speciesID: ID): Species @join__field(graph: SPECIES)\n  starship(id: ID, starshipID: ID): Starship @join__field(graph: STARSHIPS)\n  vehicle(id: ID, vehicleID: ID): Vehicle @join__field(graph: VEHICLES)\n}\n\n\"\"\"A type of person or character within the Star Wars Universe.\"\"\"\ntype Species implements Node\n  @join__owner(graph: SPECIES)\n  @join__type(graph: SPECIES, key: \"id\")\n  @join__type(graph: FILMS, key: \"id\")\n  @join__type(graph: PEOPLE, key: \"id\")\n{\n  \"\"\"The average height of this species in centimeters.\"\"\"\n  averageHeight: Float @join__field(graph: SPECIES)\n\n  \"\"\"The average lifespan of this species in years, null if unknown.\"\"\"\n  averageLifespan: Int @join__field(graph: SPECIES)\n\n  \"\"\"The classification of this species, such as \"mammal\" or \"reptile\".\"\"\"\n  classification: String @join__field(graph: SPECIES)\n\n  \"\"\"The ISO 8601 date format of the time that this resource was created.\"\"\"\n  created: String @join__field(graph: SPECIES)\n\n  \"\"\"The designation of this species, such as \"sentient\".\"\"\"\n  designation: String @join__field(graph: SPECIES)\n\n  \"\"\"The ISO 8601 date format of the time that this resource was edited.\"\"\"\n  edited: String @join__field(graph: SPECIES)\n\n  \"\"\"\n  Common eye colors for this species, null if this species does not typically\n  have eyes.\n  \"\"\"\n  eyeColors: [String] @join__field(graph: SPECIES)\n  filmConnection(after: String, before: String, first: Int, last: Int): SpeciesFilmsConnection @join__field(graph: SPECIES)\n\n  \"\"\"\n  Common hair colors for this species, null if this species does not typically\n  have hair.\n  \"\"\"\n  hairColors: [String] @join__field(graph: SPECIES)\n\n  \"\"\"A planet that this species originates from.\"\"\"\n  homeworld: Planet @join__field(graph: SPECIES)\n\n  \"\"\"The ID of an object\"\"\"\n  id: ID! @join__field(graph: SPECIES)\n\n  \"\"\"The language commonly spoken by this species.\"\"\"\n  language: String @join__field(graph: SPECIES)\n\n  \"\"\"The name of this species.\"\"\"\n  name: String @join__field(graph: SPECIES)\n  personConnection(after: String, before: String, first: Int, last: Int): SpeciesPeopleConnection @join__field(graph: SPECIES)\n\n  \"\"\"\n  Common skin colors for this species, null if this species does not typically\n  have skin.\n  \"\"\"\n  skinColors: [String] @join__field(graph: SPECIES)\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype SpeciesConnection {\n  \"\"\"A list of edges.\"\"\"\n  edges: [SpeciesEdge]\n\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"\n  A list of all of the objects returned in the connection. This is a convenience\n  field provided for quickly exploring the API; rather than querying for\n  \"{ edges { node } }\" when no edge data is needed, this field can be be used\n  instead. Note that when clients like Relay need to fetch the \"cursor\" field on\n  the edge to enable efficient pagination, this shortcut cannot be used, and the\n  full \"{ edges { node } }\" version should be used instead.\n  \"\"\"\n  species: [Species]\n\n  \"\"\"\n  A count of the total number of objects in this connection, ignoring pagination.\n  This allows a client to fetch the first five objects by passing \"5\" as the\n  argument to \"first\", then fetch the total count so it could display \"5 of 83\",\n  for example.\n  \"\"\"\n  totalCount: Int\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype SpeciesEdge {\n  \"\"\"A cursor for use in pagination\"\"\"\n  cursor: String!\n\n  \"\"\"The item at the end of the edge\"\"\"\n  node: Species\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype SpeciesFilmsConnection {\n  \"\"\"A list of edges.\"\"\"\n  edges: [SpeciesFilmsEdge]\n\n  \"\"\"\n  A list of all of the objects returned in the connection. This is a convenience\n  field provided for quickly exploring the API; rather than querying for\n  \"{ edges { node } }\" when no edge data is needed, this field can be be used\n  instead. Note that when clients like Relay need to fetch the \"cursor\" field on\n  the edge to enable efficient pagination, this shortcut cannot be used, and the\n  full \"{ edges { node } }\" version should be used instead.\n  \"\"\"\n  films: [Film]\n\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"\n  A count of the total number of objects in this connection, ignoring pagination.\n  This allows a client to fetch the first five objects by passing \"5\" as the\n  argument to \"first\", then fetch the total count so it could display \"5 of 83\",\n  for example.\n  \"\"\"\n  totalCount: Int\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype SpeciesFilmsEdge {\n  \"\"\"A cursor for use in pagination\"\"\"\n  cursor: String!\n\n  \"\"\"The item at the end of the edge\"\"\"\n  node: Film\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype SpeciesPeopleConnection {\n  \"\"\"A list of edges.\"\"\"\n  edges: [SpeciesPeopleEdge]\n\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"\n  A list of all of the objects returned in the connection. This is a convenience\n  field provided for quickly exploring the API; rather than querying for\n  \"{ edges { node } }\" when no edge data is needed, this field can be be used\n  instead. Note that when clients like Relay need to fetch the \"cursor\" field on\n  the edge to enable efficient pagination, this shortcut cannot be used, and the\n  full \"{ edges { node } }\" version should be used instead.\n  \"\"\"\n  people: [Person]\n\n  \"\"\"\n  A count of the total number of objects in this connection, ignoring pagination.\n  This allows a client to fetch the first five objects by passing \"5\" as the\n  argument to \"first\", then fetch the total count so it could display \"5 of 83\",\n  for example.\n  \"\"\"\n  totalCount: Int\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype SpeciesPeopleEdge {\n  \"\"\"A cursor for use in pagination\"\"\"\n  cursor: String!\n\n  \"\"\"The item at the end of the edge\"\"\"\n  node: Person\n}\n\n\"\"\"A single transport craft that has hyperdrive capability.\"\"\"\ntype Starship implements Node\n  @join__owner(graph: STARSHIPS)\n  @join__type(graph: STARSHIPS, key: \"id\")\n  @join__type(graph: FILMS, key: \"id\")\n  @join__type(graph: PEOPLE, key: \"id\")\n{\n  \"\"\"\n  The Maximum number of Megalights this starship can travel in a standard hour.\n  A \"Megalight\" is a standard unit of distance and has never been defined before\n  within the Star Wars universe. This figure is only really useful for measuring\n  the difference in speed of starships. We can assume it is similar to AU, the\n  distance between our Sun (Sol) and Earth.\n  \"\"\"\n  MGLT: Int @join__field(graph: STARSHIPS)\n\n  \"\"\"The maximum number of kilograms that this starship can transport.\"\"\"\n  cargoCapacity: Float @join__field(graph: STARSHIPS)\n\n  \"\"\"\n  The maximum length of time that this starship can provide consumables for its\n  entire crew without having to resupply.\n  \"\"\"\n  consumables: String @join__field(graph: STARSHIPS)\n\n  \"\"\"The cost of this starship new, in galactic credits.\"\"\"\n  costInCredits: Float @join__field(graph: STARSHIPS)\n\n  \"\"\"The ISO 8601 date format of the time that this resource was created.\"\"\"\n  created: String @join__field(graph: STARSHIPS)\n\n  \"\"\"The number of personnel needed to run or pilot this starship.\"\"\"\n  crew: String @join__field(graph: STARSHIPS)\n\n  \"\"\"The ISO 8601 date format of the time that this resource was edited.\"\"\"\n  edited: String @join__field(graph: STARSHIPS)\n  filmConnection(after: String, before: String, first: Int, last: Int): StarshipFilmsConnection @join__field(graph: STARSHIPS)\n\n  \"\"\"The class of this starships hyperdrive.\"\"\"\n  hyperdriveRating: Float @join__field(graph: STARSHIPS)\n\n  \"\"\"The ID of an object\"\"\"\n  id: ID! @join__field(graph: STARSHIPS)\n\n  \"\"\"The length of this starship in meters.\"\"\"\n  length: Float @join__field(graph: STARSHIPS)\n\n  \"\"\"The manufacturers of this starship.\"\"\"\n  manufacturers: [String] @join__field(graph: STARSHIPS)\n\n  \"\"\"\n  The maximum speed of this starship in atmosphere. null if this starship is\n  incapable of atmosphering flight.\n  \"\"\"\n  maxAtmospheringSpeed: Int @join__field(graph: STARSHIPS)\n\n  \"\"\"\n  The model or official name of this starship. Such as \"T-65 X-wing\" or \"DS-1\n  Orbital Battle Station\".\n  \"\"\"\n  model: String @join__field(graph: STARSHIPS)\n\n  \"\"\"The name of this starship. The common name, such as \"Death Star\".\"\"\"\n  name: String @join__field(graph: STARSHIPS)\n\n  \"\"\"The number of non-essential people this starship can transport.\"\"\"\n  passengers: String @join__field(graph: STARSHIPS)\n  pilotConnection(after: String, before: String, first: Int, last: Int): StarshipPilotsConnection @join__field(graph: STARSHIPS)\n\n  \"\"\"\n  The class of this starship, such as \"Starfighter\" or \"Deep Space Mobile\n  Battlestation\"\n  \"\"\"\n  starshipClass: String @join__field(graph: STARSHIPS)\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype StarshipFilmsConnection {\n  \"\"\"A list of edges.\"\"\"\n  edges: [StarshipFilmsEdge]\n\n  \"\"\"\n  A list of all of the objects returned in the connection. This is a convenience\n  field provided for quickly exploring the API; rather than querying for\n  \"{ edges { node } }\" when no edge data is needed, this field can be be used\n  instead. Note that when clients like Relay need to fetch the \"cursor\" field on\n  the edge to enable efficient pagination, this shortcut cannot be used, and the\n  full \"{ edges { node } }\" version should be used instead.\n  \"\"\"\n  films: [Film]\n\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"\n  A count of the total number of objects in this connection, ignoring pagination.\n  This allows a client to fetch the first five objects by passing \"5\" as the\n  argument to \"first\", then fetch the total count so it could display \"5 of 83\",\n  for example.\n  \"\"\"\n  totalCount: Int\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype StarshipFilmsEdge {\n  \"\"\"A cursor for use in pagination\"\"\"\n  cursor: String!\n\n  \"\"\"The item at the end of the edge\"\"\"\n  node: Film\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype StarshipPilotsConnection {\n  \"\"\"A list of edges.\"\"\"\n  edges: [StarshipPilotsEdge]\n\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"\n  A list of all of the objects returned in the connection. This is a convenience\n  field provided for quickly exploring the API; rather than querying for\n  \"{ edges { node } }\" when no edge data is needed, this field can be be used\n  instead. Note that when clients like Relay need to fetch the \"cursor\" field on\n  the edge to enable efficient pagination, this shortcut cannot be used, and the\n  full \"{ edges { node } }\" version should be used instead.\n  \"\"\"\n  pilots: [Person]\n\n  \"\"\"\n  A count of the total number of objects in this connection, ignoring pagination.\n  This allows a client to fetch the first five objects by passing \"5\" as the\n  argument to \"first\", then fetch the total count so it could display \"5 of 83\",\n  for example.\n  \"\"\"\n  totalCount: Int\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype StarshipPilotsEdge {\n  \"\"\"A cursor for use in pagination\"\"\"\n  cursor: String!\n\n  \"\"\"The item at the end of the edge\"\"\"\n  node: Person\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype StarshipsConnection {\n  \"\"\"A list of edges.\"\"\"\n  edges: [StarshipsEdge]\n\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"\n  A list of all of the objects returned in the connection. This is a convenience\n  field provided for quickly exploring the API; rather than querying for\n  \"{ edges { node } }\" when no edge data is needed, this field can be be used\n  instead. Note that when clients like Relay need to fetch the \"cursor\" field on\n  the edge to enable efficient pagination, this shortcut cannot be used, and the\n  full \"{ edges { node } }\" version should be used instead.\n  \"\"\"\n  starships: [Starship]\n\n  \"\"\"\n  A count of the total number of objects in this connection, ignoring pagination.\n  This allows a client to fetch the first five objects by passing \"5\" as the\n  argument to \"first\", then fetch the total count so it could display \"5 of 83\",\n  for example.\n  \"\"\"\n  totalCount: Int\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype StarshipsEdge {\n  \"\"\"A cursor for use in pagination\"\"\"\n  cursor: String!\n\n  \"\"\"The item at the end of the edge\"\"\"\n  node: Starship\n}\n\n\"\"\"A single transport craft that does not have hyperdrive capability\"\"\"\ntype Vehicle implements Node\n  @join__owner(graph: VEHICLES)\n  @join__type(graph: VEHICLES, key: \"id\")\n  @join__type(graph: FILMS, key: \"id\")\n  @join__type(graph: PEOPLE, key: \"id\")\n{\n  \"\"\"The maximum number of kilograms that this vehicle can transport.\"\"\"\n  cargoCapacity: Float @join__field(graph: VEHICLES)\n\n  \"\"\"\n  The maximum length of time that this vehicle can provide consumables for its\n  entire crew without having to resupply.\n  \"\"\"\n  consumables: String @join__field(graph: VEHICLES)\n\n  \"\"\"The cost of this vehicle new, in Galactic Credits.\"\"\"\n  costInCredits: Float @join__field(graph: VEHICLES)\n\n  \"\"\"The ISO 8601 date format of the time that this resource was created.\"\"\"\n  created: String @join__field(graph: VEHICLES)\n\n  \"\"\"The number of personnel needed to run or pilot this vehicle.\"\"\"\n  crew: String @join__field(graph: VEHICLES)\n\n  \"\"\"The ISO 8601 date format of the time that this resource was edited.\"\"\"\n  edited: String @join__field(graph: VEHICLES)\n  filmConnection(after: String, before: String, first: Int, last: Int): VehicleFilmsConnection @join__field(graph: VEHICLES)\n\n  \"\"\"The ID of an object\"\"\"\n  id: ID! @join__field(graph: VEHICLES)\n\n  \"\"\"The length of this vehicle in meters.\"\"\"\n  length: Float @join__field(graph: VEHICLES)\n\n  \"\"\"The manufacturers of this vehicle.\"\"\"\n  manufacturers: [String] @join__field(graph: VEHICLES)\n\n  \"\"\"The maximum speed of this vehicle in atmosphere.\"\"\"\n  maxAtmospheringSpeed: Int @join__field(graph: VEHICLES)\n\n  \"\"\"\n  The model or official name of this vehicle. Such as \"All-Terrain Attack\n  Transport\".\n  \"\"\"\n  model: String @join__field(graph: VEHICLES)\n\n  \"\"\"\n  The name of this vehicle. The common name, such as \"Sand Crawler\" or \"Speeder\n  bike\".\n  \"\"\"\n  name: String @join__field(graph: VEHICLES)\n\n  \"\"\"The number of non-essential people this vehicle can transport.\"\"\"\n  passengers: String @join__field(graph: VEHICLES)\n  pilotConnection(after: String, before: String, first: Int, last: Int): VehiclePilotsConnection @join__field(graph: VEHICLES)\n\n  \"\"\"The class of this vehicle, such as \"Wheeled\" or \"Repulsorcraft\".\"\"\"\n  vehicleClass: String @join__field(graph: VEHICLES)\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype VehicleFilmsConnection {\n  \"\"\"A list of edges.\"\"\"\n  edges: [VehicleFilmsEdge]\n\n  \"\"\"\n  A list of all of the objects returned in the connection. This is a convenience\n  field provided for quickly exploring the API; rather than querying for\n  \"{ edges { node } }\" when no edge data is needed, this field can be be used\n  instead. Note that when clients like Relay need to fetch the \"cursor\" field on\n  the edge to enable efficient pagination, this shortcut cannot be used, and the\n  full \"{ edges { node } }\" version should be used instead.\n  \"\"\"\n  films: [Film]\n\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"\n  A count of the total number of objects in this connection, ignoring pagination.\n  This allows a client to fetch the first five objects by passing \"5\" as the\n  argument to \"first\", then fetch the total count so it could display \"5 of 83\",\n  for example.\n  \"\"\"\n  totalCount: Int\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype VehicleFilmsEdge {\n  \"\"\"A cursor for use in pagination\"\"\"\n  cursor: String!\n\n  \"\"\"The item at the end of the edge\"\"\"\n  node: Film\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype VehiclePilotsConnection {\n  \"\"\"A list of edges.\"\"\"\n  edges: [VehiclePilotsEdge]\n\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"\n  A list of all of the objects returned in the connection. This is a convenience\n  field provided for quickly exploring the API; rather than querying for\n  \"{ edges { node } }\" when no edge data is needed, this field can be be used\n  instead. Note that when clients like Relay need to fetch the \"cursor\" field on\n  the edge to enable efficient pagination, this shortcut cannot be used, and the\n  full \"{ edges { node } }\" version should be used instead.\n  \"\"\"\n  pilots: [Person]\n\n  \"\"\"\n  A count of the total number of objects in this connection, ignoring pagination.\n  This allows a client to fetch the first five objects by passing \"5\" as the\n  argument to \"first\", then fetch the total count so it could display \"5 of 83\",\n  for example.\n  \"\"\"\n  totalCount: Int\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype VehiclePilotsEdge {\n  \"\"\"A cursor for use in pagination\"\"\"\n  cursor: String!\n\n  \"\"\"The item at the end of the edge\"\"\"\n  node: Person\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype VehiclesConnection {\n  \"\"\"A list of edges.\"\"\"\n  edges: [VehiclesEdge]\n\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"\n  A count of the total number of objects in this connection, ignoring pagination.\n  This allows a client to fetch the first five objects by passing \"5\" as the\n  argument to \"first\", then fetch the total count so it could display \"5 of 83\",\n  for example.\n  \"\"\"\n  totalCount: Int\n\n  \"\"\"\n  A list of all of the objects returned in the connection. This is a convenience\n  field provided for quickly exploring the API; rather than querying for\n  \"{ edges { node } }\" when no edge data is needed, this field can be be used\n  instead. Note that when clients like Relay need to fetch the \"cursor\" field on\n  the edge to enable efficient pagination, this shortcut cannot be used, and the\n  full \"{ edges { node } }\" version should be used instead.\n  \"\"\"\n  vehicles: [Vehicle]\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype VehiclesEdge {\n  \"\"\"A cursor for use in pagination\"\"\"\n  cursor: String!\n\n  \"\"\"The item at the end of the edge\"\"\"\n  node: Vehicle\n}\n\nenum core__Purpose {\n  \"\"\"\n  `EXECUTION` features provide metadata necessary to for operation execution.\n  \"\"\"\n  EXECUTION\n\n  \"\"\"\n  `SECURITY` features provide metadata necessary to securely resolve fields.\n  \"\"\"\n  SECURITY\n}\n\nscalar join__FieldSet\n\nenum join__Graph {\n  FILMS @join__graph(name: \"films\" url: \"\")\n  PEOPLE @join__graph(name: \"people\" url: \"\")\n  PLANETS @join__graph(name: \"planets\" url: \"\")\n  ROOT @join__graph(name: \"root\" url: \"\")\n  SPECIES @join__graph(name: \"species\" url: \"\")\n  STARSHIPS @join__graph(name: \"starships\" url: \"\")\n  VEHICLES @join__graph(name: \"vehicles\" url: \"\")\n}\n",
  "federation": "1"
}